{"ast":null,"code":"import _toConsumableArray from\"C:/Users/botho/l/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _objectSpread from\"C:/Users/botho/l/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import ADD from\"./ActionName\";import ListItem from\"../Products/product\";var intinitial={Product:ListItem,OnProcessing:[]};var CartReducer=function CartReducer(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:intinitial;var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case ADD:var Item=state.Product.find(function(p){return p.id===action.payload.id;});var inCart=state.OnProcessing.find(function(p){return p.id===action.payload.id?true:false;});return _objectSpread(_objectSpread({},state),{},{OnProcessing:inCart?state.OnProcessing.map(function(p){return p.id===action.payload.id?_objectSpread(_objectSpread({},p),{},{quantity:p.quantity+1}):p;}):[].concat(_toConsumableArray(state.OnProcessing),[_objectSpread(_objectSpread({},Item),{},{quantity:1})])});default:return state;}};export default CartReducer;","map":{"version":3,"sources":["C:/Users/botho/l/src/redux/reducer.js"],"names":["ADD","ListItem","intinitial","Product","OnProcessing","CartReducer","state","action","type","Item","find","p","id","payload","inCart","map","quantity"],"mappings":"6MAAA,MAAOA,CAAAA,GAAP,KAAgB,cAAhB,CACA,MAAOC,CAAAA,QAAP,KAAqB,qBAArB,CACA,GAAMC,CAAAA,UAAU,CAAG,CAEfC,OAAO,CAAEF,QAFM,CAGfG,YAAY,CAAE,EAHC,CAAnB,CAMA,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,EAAgC,IAA/BC,CAAAA,KAA+B,2DAAvBJ,UAAuB,IAAXK,CAAAA,MAAW,2CAClD,OAAQA,MAAM,CAACC,IAAf,EACE,IAAKR,CAAAA,GAAL,CACE,GAAMS,CAAAA,IAAI,CAAGH,KAAK,CAACH,OAAN,CAAcO,IAAd,CAAmB,SAACC,CAAD,QAAOA,CAAAA,CAAC,CAACC,EAAF,GAASL,MAAM,CAACM,OAAP,CAAeD,EAA/B,EAAnB,CAAb,CACA,GAAME,CAAAA,MAAM,CAAGR,KAAK,CAACF,YAAN,CAAmBM,IAAnB,CAAwB,SAACC,CAAD,QACrCA,CAAAA,CAAC,CAACC,EAAF,GAASL,MAAM,CAACM,OAAP,CAAeD,EAAxB,CAA6B,IAA7B,CAAoC,KADC,EAAxB,CAAf,CAGA,sCACKN,KADL,MAEEF,YAAY,CAAEU,MAAM,CAChBR,KAAK,CAACF,YAAN,CAAmBW,GAAnB,CAAuB,SAACJ,CAAD,QACrBA,CAAAA,CAAC,CAACC,EAAF,GAASL,MAAM,CAACM,OAAP,CAAeD,EAAxB,gCAAkCD,CAAlC,MAAqCK,QAAQ,CAAEL,CAAC,CAACK,QAAF,CAAa,CAA5D,GAAkEL,CAD7C,EAAvB,CADgB,8BAIZL,KAAK,CAACF,YAJM,kCAIaK,IAJb,MAImBO,QAAQ,CAAE,CAJ7B,IAFtB,GAQA,QAAU,MAAQV,CAAAA,KAAR,CAdd,CAgBD,CAjBD,CAkBA,cAAeD,CAAAA,WAAf","sourcesContent":["import ADD from \"./ActionName\";\r\nimport ListItem from \"../Products/product\";\r\nconst intinitial = {\r\n  \r\n    Product: ListItem,\r\n    OnProcessing: []\r\n  ,\r\n}\r\nconst CartReducer = (state = intinitial, action) => {\r\n  switch (action.type) {\r\n    case ADD:\r\n      const Item = state.Product.find((p) => p.id === action.payload.id);\r\n      const inCart = state.OnProcessing.find((p) =>\r\n        p.id === action.payload.id ? true : false\r\n      );\r\n      return {\r\n        ...state,\r\n        OnProcessing: inCart\r\n          ? state.OnProcessing.map((p) =>\r\n              p.id === action.payload.id ? { ...p, quantity: p.quantity + 1 } : p\r\n            )\r\n          : [...state.OnProcessing, { ...Item, quantity: 1 }],\r\n      };\r\n      default : return  state;\r\n  }\r\n};\r\nexport default CartReducer;"]},"metadata":{},"sourceType":"module"}