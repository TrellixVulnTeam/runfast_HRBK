{"ast":null,"code":"import { ADD, MINUS, REMOVE } from \"./ActionName\";\nimport ListItem from \"../Products/product\";\n\nasync function productData() {\n  let response = await fetch(\"http://localhost:5000/product\");\n  console.log(response.json());\n  return response;\n}\n\nconst intinitial = {\n  Product: productData(),\n  OnProcessing: [],\n  AddProduct: false\n};\n\nconst CartReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : intinitial;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case ADD:\n      const Item = state.Product.find(p => p.id === action.payload.id);\n      const inCart = state.OnProcessing.find(p => p.id === action.payload.id ? true : false);\n      return { ...state,\n        OnProcessing: inCart ? state.OnProcessing.map(p => p.id === action.payload.id ? { ...p,\n          quantity: p.quantity + 1\n        } : p) : [...state.OnProcessing, { ...Item,\n          quantity: 1\n        }],\n        AddProduct: true\n      };\n\n    case MINUS:\n      return { ...state,\n        OnProcessing: state.OnProcessing.map(p => p.id === action.payload.id ? { ...p,\n          quantity: p.quantity === 0 ? 0 : p.quantity - 1\n        } : p)\n      };\n\n    case REMOVE:\n      return { ...state,\n        OnProcessing: state.OnProcessing.filter(p => p.id !== action.payload.id)\n      };\n\n    default:\n      return state;\n  }\n};\n\n_c = CartReducer;\nexport default CartReducer;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartReducer\");","map":{"version":3,"sources":["C:/Users/Akanaka/ShoppingCart/last/src/redux/reducer.js"],"names":["ADD","MINUS","REMOVE","ListItem","productData","response","fetch","console","log","json","intinitial","Product","OnProcessing","AddProduct","CartReducer","state","action","type","Item","find","p","id","payload","inCart","map","quantity","filter"],"mappings":"AAAA,SAAQA,GAAR,EAAYC,KAAZ,EAAkBC,MAAlB,QAA+B,cAA/B;AAEA,OAAOC,QAAP,MAAqB,qBAArB;;AACA,eAAeC,WAAf,GAA4B;AAC1B,MAAIC,QAAQ,GAAE,MAAMC,KAAK,CAAC,+BAAD,CAAzB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYH,QAAQ,CAACI,IAAT,EAAZ;AACA,SAAOJ,QAAP;AACA;;AACF,MAAMK,UAAU,GAAG;AAEjBC,EAAAA,OAAO,EAAEP,WAAW,EAFH;AAGjBQ,EAAAA,YAAY,EAAE,EAHG;AAKjBC,EAAAA,UAAU,EAAC;AALM,CAAnB;;AAQA,MAAMC,WAAW,GAAG,YAAgC;AAAA,MAA/BC,KAA+B,uEAAvBL,UAAuB;AAAA,MAAXM,MAAW;;AAClD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKjB,GAAL;AACE,YAAMkB,IAAI,GAAGH,KAAK,CAACJ,OAAN,CAAcQ,IAAd,CAAoBC,CAAD,IAAOA,CAAC,CAACC,EAAF,KAASL,MAAM,CAACM,OAAP,CAAeD,EAAlD,CAAb;AACA,YAAME,MAAM,GAAGR,KAAK,CAACH,YAAN,CAAmBO,IAAnB,CAAyBC,CAAD,IACrCA,CAAC,CAACC,EAAF,KAASL,MAAM,CAACM,OAAP,CAAeD,EAAxB,GAA6B,IAA7B,GAAoC,KADvB,CAAf;AAGA,aAAO,EACL,GAAGN,KADE;AAELH,QAAAA,YAAY,EAAEW,MAAM,GAChBR,KAAK,CAACH,YAAN,CAAmBY,GAAnB,CAAwBJ,CAAD,IACvBA,CAAC,CAACC,EAAF,KAASL,MAAM,CAACM,OAAP,CAAeD,EAAxB,GAA6B,EAAE,GAAGD,CAAL;AAAQK,UAAAA,QAAQ,EAAEL,CAAC,CAACK,QAAF,GAAa;AAA/B,SAA7B,GAAkEL,CADlE,CADgB,GAIhB,CAAC,GAAGL,KAAK,CAACH,YAAV,EAAwB,EAAE,GAAGM,IAAL;AAAWO,UAAAA,QAAQ,EAAE;AAArB,SAAxB,CANC;AAMiDZ,QAAAA,UAAU,EAAC;AAN5D,OAAP;;AAQF,SAAKZ,KAAL;AAEE,aAAO,EACL,GAAGc,KADE;AACKH,QAAAA,YAAY,EACpBG,KAAK,CAACH,YAAN,CAAmBY,GAAnB,CAAwBJ,CAAD,IAAOA,CAAC,CAACC,EAAF,KAASL,MAAM,CAACM,OAAP,CAAeD,EAAxB,GAA6B,EAAE,GAAGD,CAAL;AAAQK,UAAAA,QAAQ,EAAGL,CAAC,CAACK,QAAF,KAAa,CAAd,GAAiB,CAAjB,GAAmBL,CAAC,CAACK,QAAF,GAAW;AAAhD,SAA7B,GAAmFL,CAAjH;AAFG,OAAP;;AAIA,SAAKlB,MAAL;AACE,aAAM,EACJ,GAAGa,KADC;AACMH,QAAAA,YAAY,EAACG,KAAK,CAACH,YAAN,CAAmBc,MAAnB,CAA2BN,CAAD,IAAOA,CAAC,CAACC,EAAF,KAASL,MAAM,CAACM,OAAP,CAAeD,EAAzD;AADnB,OAAN;;AAGJ;AAAS,aAAON,KAAP;AAxBX;AA0BD,CA3BD;;KAAMD,W;AA4BN,eAAeA,WAAf","sourcesContent":["import {ADD,MINUS,REMOVE} from \"./ActionName\";\r\n\r\nimport ListItem from \"../Products/product\";\r\nasync function productData(){\r\n  let response =await fetch(\"http://localhost:5000/product\");\r\n  console.log(response.json());\r\n  return response;\r\n }\r\nconst intinitial = {\r\n\r\n  Product: productData(),\r\n  OnProcessing: []\r\n  ,\r\n  AddProduct:false,\r\n}\r\n\r\nconst CartReducer = (state = intinitial, action) => {\r\n  switch (action.type) {\r\n    case ADD:\r\n      const Item = state.Product.find((p) => p.id === action.payload.id);\r\n      const inCart = state.OnProcessing.find((p) =>\r\n        p.id === action.payload.id ? true : false\r\n      );\r\n      return {\r\n        ...state,\r\n        OnProcessing: inCart\r\n          ? state.OnProcessing.map((p) =>\r\n            p.id === action.payload.id ? { ...p, quantity: p.quantity + 1 } : p\r\n          )\r\n          : [...state.OnProcessing, { ...Item, quantity: 1 }],AddProduct:true\r\n      };\r\n    case MINUS:\r\n\r\n      return {\r\n        ...state, OnProcessing:\r\n          state.OnProcessing.map((p) => p.id === action.payload.id ? { ...p, quantity: (p.quantity===0)?0:p.quantity-1 } : p)\r\n      }\r\n      case REMOVE:\r\n        return{\r\n          ...state, OnProcessing:state.OnProcessing.filter((p) => p.id !== action.payload.id)\r\n        }\r\n    default: return state;\r\n  }\r\n};\r\nexport default CartReducer;"]},"metadata":{},"sourceType":"module"}